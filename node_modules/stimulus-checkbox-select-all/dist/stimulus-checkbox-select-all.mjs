import { Controller as c } from "@hotwired/stimulus";
class h extends c {
  initialize() {
    this.toggle = this.toggle.bind(this), this.refresh = this.refresh.bind(this);
  }
  checkboxAllTargetConnected(e) {
    e.addEventListener("change", this.toggle), this.refresh();
  }
  checkboxTargetConnected(e) {
    e.addEventListener("change", this.refresh), this.refresh();
  }
  checkboxAllTargetDisconnected(e) {
    e.removeEventListener("change", this.toggle), this.refresh();
  }
  checkboxTargetDisconnected(e) {
    e.removeEventListener("change", this.refresh), this.refresh();
  }
  toggle(e) {
    e.preventDefault(), this.checkboxTargets.forEach((t) => {
      t.checked = e.target.checked, this.triggerInputEvent(t);
    });
  }
  refresh() {
    const e = this.checkboxTargets.length, t = this.checked.length;
    this.checkboxAllTarget.checked = t > 0, this.checkboxAllTarget.indeterminate = t > 0 && t < e;
  }
  triggerInputEvent(e) {
    const t = new Event("input", { bubbles: !1, cancelable: !0 });
    e.dispatchEvent(t);
  }
  get checked() {
    return this.checkboxTargets.filter((e) => e.checked);
  }
  get unchecked() {
    return this.checkboxTargets.filter((e) => !e.checked);
  }
}
h.targets = ["checkboxAll", "checkbox"];
export {
  h as default
};
